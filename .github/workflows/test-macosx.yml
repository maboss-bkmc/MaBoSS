name: Tests MacOSX

on:
  push:
  pull_request:
  release:
    types: [created]
    
jobs:

###################################################################################################
# MaBoSS                                                                                          #
###################################################################################################
  maboss:
    name: MaBoSS
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run : |
        brew install flex bison gcc@10 libxml2 cmake
        pip install numpy
        wget https://sourceforge.net/projects/sbml/files/libsbml/5.19.0/stable/libSBML-5.19.0-core-plus-packages-src.tar.gz
        tar -zxf libSBML-5.19.0-core-plus-packages-src.tar.gz
        cd libSBML-5.19.0-Source
        mkdir build
        cd build
        cmake -DCMAKE_INSTALL_PREFIX=/usr/local \
        -DCMAKE_INSTALL_LIBDIR=/usr/local/lib \
        -DCMAKE_CXX_COMPILER=g++-10 \
        -DCMAKE_C_COMPILER=gcc-10 \
        -DCMAKE_CXX_STANDARD_LIBRARIES=-lxml2 \
        -DWITH_SWIG=OFF \
        -DLIBXML_LIBRARY=/usr/local/opt/libxml2/lib \
        -DLIBXML_INCLUDE_DIR=/usr/local/opt/libxml2/include/libxml2 \
        -DENABLE_COMP=ON \
        -DENABLE_FBC=ON \
        -DENABLE_GROUPS=ON \
        -DENABLE_LAYOUT=ON \
        -DENABLE_MULTI=ON \
        -DENABLE_QUAL=ON \
        -DENABLE_RENDER=ON \
        -DENABLE_DISTRIB=ON \
        ..
        make
        sudo make install

    - name: Build MaBoSS
      run: |
        cd engine/src
        make clean
        export CXXFLAGS="${CXXFLAGS} -I/usr/local/include -I/usr/local/include/libxml2"
        export LDFLAGS="${LDFLAGS} -L/usr/local/lib -lxml2"
        make CXX=g++-10 install SBML_COMPAT=1
        make CXX=g++-10 MAXNODES=128 install SBML_COMPAT=1
        
    - name: Test MaBoSS
      run: |
        bash -c "cd engine/tests; bash ./test-cellcycle.sh"
        bash -c "cd engine/tests; bash ./test-ensemble.sh"
        bash -c "cd engine/tests; bash ./test-ewing.sh"
        bash -c "cd engine/tests; bash ./test-server.sh"
        bash -c "cd engine/tests; bash ./test-sbml.sh"
        bash -c "cd engine/tests; bash ./test-prngs.sh"
        bash -c "cd engine/tests; bash ./test-rngs.sh"
        bash -c "cd engine/tests; bash ./test-user_func.sh"
        
  maboss_llvm:
    name: MaBoSS (clang)
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run : |
        brew install flex bison libxml2 cmake
        pip install numpy
        wget https://sourceforge.net/projects/sbml/files/libsbml/5.19.0/stable/libSBML-5.19.0-core-plus-packages-src.tar.gz
        tar -zxf libSBML-5.19.0-core-plus-packages-src.tar.gz
        cd libSBML-5.19.0-Source
        mkdir build
        cd build
        cmake -DCMAKE_INSTALL_PREFIX=/usr/local \
        -DCMAKE_INSTALL_LIBDIR=/usr/local/lib \
        -DCMAKE_CXX_COMPILER=g++ \
        -DCMAKE_C_COMPILER=gcc \
        -DCMAKE_CXX_STANDARD_LIBRARIES=-lxml2 \
        -DWITH_SWIG=OFF \
        -DLIBXML_LIBRARY=/usr/local/opt/libxml2/lib \
        -DLIBXML_INCLUDE_DIR=/usr/local/opt/libxml2/include/libxml2 \
        -DENABLE_COMP=ON \
        -DENABLE_FBC=ON \
        -DENABLE_GROUPS=ON \
        -DENABLE_LAYOUT=ON \
        -DENABLE_MULTI=ON \
        -DENABLE_QUAL=ON \
        -DENABLE_RENDER=ON \
        -DENABLE_DISTRIB=ON \
        ..
        make
        sudo make install


    - name: Build MaBoSS
      run: |
        cd engine/src
        make clean
        g++ --version
        make CXX=g++ install SBML_COMPAT=1
        make CXX=g++ MAXNODES=128 install SBML_COMPAT=1
        
    - name: Test MaBoSS
      run: |
        bash -c "cd engine/tests; bash ./test-cellcycle.sh"
        bash -c "cd engine/tests; bash ./test-ensemble.sh"
        bash -c "cd engine/tests; bash ./test-ewing.sh"
        bash -c "cd engine/tests; bash ./test-server.sh"
        bash -c "cd engine/tests; bash ./test-sbml.sh"
        bash -c "cd engine/tests; bash ./test-prngs.sh"
        bash -c "cd engine/tests; bash ./test-rngs.sh"
        bash -c "cd engine/tests; bash ./test-user_func.sh"
  
  conda_maboss:
    name: Build Conda MaBoSS package
    runs-on: macos-latest
    needs: maboss
  
    steps:
    - uses: actions/checkout@v2
    - uses: s-weigand/setup-conda@v1

    - name: Installing conda-build      
      run: conda install conda-build

    - name: Downgrading XCode to 11.7
      run: |
        sudo xcode-select -s /Applications/Xcode_11.7.app/Contents/Developer
        brew reinstall llvm    
    
    - name: Build MaBoSS Anaconda package
      run: |
        conda build -c vincent-noel conda/maboss-sbml
              
    - name: Upload MaBoSS to Anaconda cloud
      if: github.repository == 'vincent-noel/MaBoSS-env-2.0'
      run: |   
        anaconda -t ${{ secrets.ANACONDA_TOKEN }} upload -u vincent-noel /usr/local/miniconda/conda-bld/osx-64/*.tar.bz2 --force;
 
  maboss_conda_test:
    name: MaBoSS Anaconda package test
    runs-on: macos-latest
    needs: conda_maboss
    
    steps:
    - uses: actions/checkout@v2
    - uses: s-weigand/setup-conda@v1
    
    - name: Install package
      run: conda install -c vincent-noel maboss
      
    - name: Test package
      run: |
        MaBoSS --version
        MaBoSS_128n --version
 
###################################################################################################
# cMaBoSS                                                                                         #
###################################################################################################                        
  cmaboss:
    name: cMaBoSS
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
        
    - name: Install dependencies
      run: |
        brew install flex bison gcc@10 python3 libxml2 cmake
        pip3 install numpy
        wget https://sourceforge.net/projects/sbml/files/libsbml/5.19.0/stable/libSBML-5.19.0-core-plus-packages-src.tar.gz
        tar -zxf libSBML-5.19.0-core-plus-packages-src.tar.gz
        cd libSBML-5.19.0-Source
        mkdir build
        cd build
        cmake -DCMAKE_INSTALL_PREFIX=/usr/local \
        -DCMAKE_INSTALL_LIBDIR=/usr/local/lib \
        -DCMAKE_CXX_COMPILER=g++ \
        -DCMAKE_C_COMPILER=gcc \
        -DCMAKE_CXX_STANDARD_LIBRARIES=-lxml2 \
        -DWITH_SWIG=OFF \
        -DLIBXML_LIBRARY=/usr/local/opt/libxml2/lib \
        -DLIBXML_INCLUDE_DIR=/usr/local/opt/libxml2/include/libxml2 \
        -DENABLE_COMP=ON \
        -DENABLE_FBC=ON \
        -DENABLE_GROUPS=ON \
        -DENABLE_LAYOUT=ON \
        -DENABLE_MULTI=ON \
        -DENABLE_QUAL=ON \
        -DENABLE_RENDER=ON \
        -DENABLE_DISTRIB=ON \
        .. 
        make 
        sudo make install
        
    - name: Build cMaBoSS
      run: |
        cd engine/src
        make
        cd ../python
        cp -r ../src .
        python3 setup.py build_ext --inplace
        cd ../..
    
    - name: Test cMaBoSS
      run: |
        cd engine/python
        python3 -m unittest test
        python3 -m unittest test_128n
  
  conda_cmaboss:
    name: cMaBoSS Conda package
    runs-on: macos-latest
    needs: cmaboss

    steps:
    - uses: actions/checkout@v2
    - uses: s-weigand/setup-conda@v1
    
    - name: Install conda-build
      run: conda install conda-build anaconda-client
      
    - name: Downgrading XCode to 11.7
      run: |
        sudo xcode-select -s /Applications/Xcode_11.7.app/Contents/Developer
        brew reinstall llvm    
    
    - name: Build cMaBoSS Anaconda package
      run: |
        conda build -c vincent-noel conda/cmaboss-sbml;   
        
    - name: Upload cMaBoSS to Anaconda cloud
      if: github.repository == 'vincent-noel/MaBoSS-env-2.0'
      run: |   
        anaconda -t ${{ secrets.ANACONDA_TOKEN }} upload -u vincent-noel /usr/local/miniconda/conda-bld/osx-64/*.tar.bz2 --force;
 
              
  cmaboss_pypi:
    name: cMaBoSS PyPi package
    runs-on: macos-latest
    needs: cmaboss
    strategy:
      matrix:
        python:
          - 3.5.10
          - 3.6.12
          - 3.7.9
          - 3.8.6
    steps:
    - uses: actions/checkout@v2
    
    - name: Setup python env
      uses: gabrielfalcao/pyenv-action@v7
      with:
        default: "${{ matrix.python }}"
        command: |
          pip install -U pip  # upgrade pip after installing python
          
    - name: Install python dependencies
      run: pip install twine wheel numpy

    - name: Install libSBML
      run: |
        brew install flex bison gcc@10 python3 libxml2 cmake
        pip3 install numpy
        wget https://sourceforge.net/projects/sbml/files/libsbml/5.19.0/stable/libSBML-5.19.0-core-plus-packages-src.tar.gz
        tar -zxf libSBML-5.19.0-core-plus-packages-src.tar.gz
        cd libSBML-5.19.0-Source
        mkdir build
        cd build
        cmake -DCMAKE_INSTALL_PREFIX=/usr/local \
        -DCMAKE_INSTALL_LIBDIR=/usr/local/lib \
        -DCMAKE_CXX_COMPILER=g++ \
        -DCMAKE_C_COMPILER=gcc \
        -DCMAKE_CXX_STANDARD_LIBRARIES=-lxml2 \
        -DWITH_SWIG=OFF \
        -DLIBXML_LIBRARY=/usr/local/opt/libxml2/lib \
        -DLIBXML_INCLUDE_DIR=/usr/local/opt/libxml2/include/libxml2 \
        -DENABLE_COMP=ON \
        -DENABLE_FBC=ON \
        -DENABLE_GROUPS=ON \
        -DENABLE_LAYOUT=ON \
        -DENABLE_MULTI=ON \
        -DENABLE_QUAL=ON \
        -DENABLE_RENDER=ON \
        -DENABLE_DISTRIB=ON \
        .. 
        make 
        sudo make install
        
    - name: Compile MaBoSS
      run: |
        cd engine/src; make
        cd ../python; cp -r ../src .
        cd ../..
        
    - name: Build cMaBoSS
      run: |
        cd engine/python
        pip wheel . -w wheelhouse
        
    - name: Upload cMaBoSS to Pypi
      if: github.event_name == 'release' && github.event.action == 'created' && github.repository == 'sysbio-curie/MaBoSS-env-2.0'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      run: |
        python -m twine upload --skip-existing wheelhouse/cmaboss*

        