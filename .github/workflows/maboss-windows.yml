name: Windows

on:
  push:
  pull_request:
  release:
    types: [created]

jobs:
  maboss_windows:
    name: MaBoSS Windows
    runs-on: windows-latest
    
    defaults:
      run:
        shell: msys2 {0}
    env:
      CC: gcc
      CXX: g++
      INSTALL_PATH: /mingw64/
      BUILD_PATH: /tmp/
      LIBXML_LIBDIR: /mingw64/lib/libxml2.dll.a
      LIBXML_INCLUDEDIR: /mingw64/include/libxml2/
      CPU_COUNT: 4
      
    steps:
    - uses: actions/checkout@v4
    
    - uses: msys2/setup-msys2@v2
      with:
        update: true
        install: flex bison make 
          mingw-w64-x86_64-toolchain mingw-w64-x86_64-cmake mingw-w64-x86_64-binutils 
          mingw-w64-x86_64-gcc mingw-w64-x86_64-headers-git mingw-w64-x86_64-gcc-libs 
          mingw-w64-x86_64-libwinpthread-git mingw-w64-x86_64-winpthreads-git mingw-w64-x86_64-bzip2 
          mingw-w64-x86_64-lapack mingw-w64-x86_64-openblas mingw-w64-x86_64-hdf5
          mingw-w64-x86_64-python-pip mingw-w64-x86_64-python-numpy mingw-w64-x86_64-libxml2
          mingw-w64-x86_64-diffutils
     
    - name: Cache compiled libSBML
      id: cache-libsbml-gcc
      uses: actions/cache@v4
      with:
        path: D:/a/_temp/msys64/tmp/libsbml-5.20.4
        key: ${{ runner.os }}-libSBML-5.20.4-namespace
        
    - name: Compiling libSBML
      if: steps.cache-libsbml-gcc.outputs.cache-hit != 'true'
      run: |
        bash scripts/build_libsbml.sh
    
    - name: Install libSBML
      run: |
        bash scripts/install_libsbml.sh
        
    - name: Build MaBoSS
      run: |
        rm -fr engine/pub/*
        cd engine/src
        make clean
        make install MAXNODES=128 SBML_COMPAT=1
        make install SBML_COMPAT=1

    - name: Test MaBoSS
      run: 
        bash scripts/run_tests.sh
        bash scripts/run_sbml_tests.sh
        bash scripts/run_userfunc_tests.sh
      
  maboss_windows_cmake:
    name: MaBoSS Windows (cmake)
    runs-on: windows-2019
    
    steps:
    - uses: actions/checkout@v4
    - uses: ilammy/msvc-dev-cmd@v1 
    
    - name: Install dependencies
      run: |
        choco install winflexbison3
        python -m pip install numpy
       
    - name: Build MaBoSS
      run: |
        cmake -B build -S . -G Ninja `
          -DCMAKE_INSTALL_PREFIX=engine `
          -DSTD_THREAD=1
        cmake --build build --parallel "${CPU_COUNT}"
        cmake --install build --component executables 
        
        cmake -B build -S . -G Ninja `
          -DMAXNODES=128 `
          -DCMAKE_INSTALL_PREFIX=engine `
          -DSTD_THREAD=1
        cmake --build build --parallel "${CPU_COUNT}"
        cmake --install build --component executables 

    - name: Test MaBoSS
      env: 
        MABOSS_BIN_PATH: ../bin
        LAUNCHER: ""
      run: |
        bash scripts/run_tests.sh
        bash scripts/run_userfunc_tests.sh cmake
   
  maboss_windows_cmake_sbml:
    name: MaBoSS Windows with SBML support (cmake)
    runs-on: windows-2022
    
    steps:
    - uses: actions/checkout@v4
    - uses: ilammy/msvc-dev-cmd@v1 
    
    - name: Install dependencies
      run: |
        vcpkg install libxml2
        choco install winflexbison3
        python -m pip install numpy
        
    - name: Download libSBML
      run: |
        curl -L https://github.com/sbmlteam/libsbml/archive/refs/tags/v5.20.4.tar.gz --output v5.20.4.tar.gz
        7z e v5.20.4.tar.gz  && 7z x v5.20.4.tar
        
    - name: Cache compiled libSBML
      id: cache-libsbml-msvc
      uses: actions/cache@v4
      with:
        path: D:\a\MaBoSS\MaBoSS\libsbml-5.20.4\
        key: ${{ runner.os }}-libSBML-5.20.4-msvc-namespace

    - name: Compiling libSBML
      if: steps.cache-libsbml-msvc.outputs.cache-hit != 'true'
      run: |
        cmake -B libsbml-5.20.4/build -S libsbml-5.20.4 -G"Ninja" `
        -DLIBXML_LIBRARY="C:/vcpkg/installed/x64-windows/lib/libxml2.lib" `
        -DLIBXML_INCLUDE_DIR="C:/vcpkg/installed/x64-windows/include/" `
        -DWITH_SWIG=OFF `
        -DENABLE_QUAL=ON `
        -DWITH_CPP_NAMESPACE=ON
        cmake --build libsbml-5.20.4/build --parallel 4
        
    - name: Install libSBML
      run: |
        cmake --install libsbml-5.20.4/build

    - name: Build MaBoSS
      run: |
        cmake -B build -S . -G Ninja `
          -DCMAKE_INSTALL_PREFIX=engine `
          -DLIBSBML_INCLUDE_DIR="C:/Program Files (x86)/libsbml/include" `
          -DLIBSBML_LIBRARY="C:/Program Files (x86)/libsbml/lib/libsbml.lib" `
          -DSTD_THREAD=1 `
          -DSBML=1
        cmake --build build --parallel "${CPU_COUNT}"
        cmake --install build --component executables 
        
        cmake -B build -S . -G Ninja `
          -DMAXNODES=128 `
          -DCMAKE_INSTALL_PREFIX=engine `
          -DLIBSBML_INCLUDE_DIR="C:/Program Files (x86)/libsbml/include" `
          -DLIBSBML_LIBRARY="C:/Program Files (x86)/libsbml/lib/libsbml.lib" `
          -DSTD_THREAD=1 `
          -DSBML=1
        cmake --build build --parallel "${CPU_COUNT}"
        cmake --install build --component executables 
      
    # - name: Test MaBoSS
    #   env: 
    #     MABOSS_BIN_PATH: ../bin
    #   run: |
    #     engine/bin/MaBoSS.exe --version
    #     bash scripts/run_tests.sh
        

    
  maboss_binary_windows:
    runs-on: windows-latest
    name: Building MaBoSS Windows 64bits binary
    needs: maboss_windows
    
    defaults:
      run:
        shell: msys2 {0}
    env:
      CC: gcc
      CXX: g++
      INSTALL_PATH: /mingw64/
      BUILD_PATH: /tmp/
      LIBXML_LIBDIR: /mingw64/lib/libxml2.dll.a
      LIBXML_INCLUDEDIR: /mingw64/include/libxml2/
      CPU_COUNT: 4
          
    steps:
    - uses: actions/checkout@v4
    
    - uses: msys2/setup-msys2@v2
      with:
        update: true
        install: flex bison make zip 
          mingw-w64-x86_64-toolchain mingw-w64-x86_64-cmake mingw-w64-x86_64-binutils 
          mingw-w64-x86_64-gcc mingw-w64-x86_64-headers-git mingw-w64-x86_64-gcc-libs 
          mingw-w64-x86_64-libwinpthread-git mingw-w64-x86_64-winpthreads-git mingw-w64-x86_64-bzip2 
          mingw-w64-x86_64-lapack mingw-w64-x86_64-openblas mingw-w64-x86_64-libxml2
        
    - name: Cache compiled libSBML
      id: cache-libsbml-gcc
      uses: actions/cache@v4
      with:
        path: D:/a/_temp/msys64/tmp/libsbml-5.20.4
        key: ${{ runner.os }}-libSBML-5.20.4-namespace
        
    - name: Compiling libSBML
      if: steps.cache-libsbml-gcc.outputs.cache-hit != 'true'
      run: |
        bash scripts/build_libsbml.sh
    
    - name: Install libSBML
      run: |
        bash scripts/install_libsbml.sh
      
    - name: Build binary
      run: |
        rm -fr engine/pub/*
        cd engine/src
        make clean
        make install_static SBML_COMPAT=1
        make install_static MAXNODES=128 SBML_COMPAT=1
        make install_static MAXNODES=256 SBML_COMPAT=1
        make install_static MAXNODES=512 SBML_COMPAT=1
        make install_static MAXNODES=1024 SBML_COMPAT=1
        cd ../pub
        zip MaBoSS-win64.zip *
    
    - uses: actions/upload-artifact@v4
      if: github.event_name != 'release'
      with:
        name: MaBoSS-win64
        path: D:\a\MaBoSS/MaBoSS/engine/pub/MaBoSS-win64.zip
      
    - uses: actions/upload-release-asset@v1
      if: github.event_name == 'release'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_name: MaBoSS-win64.zip
        asset_path: D:\a\MaBoSS/MaBoSS/engine/pub/MaBoSS-win64.zip
        asset_content_type: application/zip
        
  maboss_library_windows:
    runs-on: windows-latest
    name: Building MaBoSS Windows 64bits library
    needs: maboss_windows
    
    env: 
      CPU_COUNT: 4

    defaults:
      run:
        shell: msys2 {0}
        
    steps:
    - uses: actions/checkout@v4
    
    - uses: msys2/setup-msys2@v2
      with:
        update: true
        install: flex bison make 
          mingw-w64-x86_64-toolchain mingw-w64-x86_64-cmake mingw-w64-x86_64-binutils 
          mingw-w64-x86_64-gcc mingw-w64-x86_64-headers-git mingw-w64-x86_64-gcc-libs 
          mingw-w64-x86_64-libwinpthread-git mingw-w64-x86_64-winpthreads-git
            
    - name: Build library
      run: |
        rm -fr engine/pub/*
        cd engine/src
        make clean
        make install_lib
        make install_lib MAXNODES=128
        make install_lib MAXNODES=256
        make install_lib MAXNODES=512
        make install_lib MAXNODES=1024
        make install_alib
        make install_alib MAXNODES=128
        make install_alib MAXNODES=256
        make install_alib MAXNODES=512
        make install_alib MAXNODES=1024
        make clean
        cd ../../../
        tar -zcvf libMaBoSS-win64.tar.gz MaBoSS/README.md MaBoSS/LICENSE MaBoSS/engine/src MaBoSS/engine/include MaBoSS/engine/lib
        
      
    - uses: actions/upload-artifact@v4
      if: github.event_name != 'release'
      with:
        name: libMaBoSS-win64
        path: D:\a\MaBoSS/libMaBoSS-win64.tar.gz
        
    - uses: actions/upload-release-asset@v1
      if: github.event_name == 'release'

      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_name: libMaBoSS-win64.tar.gz
        asset_path: D:\a\MaBoSS/libMaBoSS-win64.tar.gz
        asset_content_type: application/gzip
      
  maboss_sbml_library_windows:
    runs-on: windows-latest
    name: Building MaBoSS Windows 64bits library with libSBML
    needs: maboss_windows

    defaults:
      run:
        shell: msys2 {0}
        
    env:
      CC: gcc
      CXX: g++
      INSTALL_PATH: /mingw64/
      BUILD_PATH: /tmp/
      LIBXML_LIBDIR: /mingw64/lib/libxml2.dll.a
      LIBXML_INCLUDEDIR: /mingw64/include/libxml2/
      CPU_COUNT: 4
          
    steps:
    - uses: actions/checkout@v4
    
    - uses: msys2/setup-msys2@v2
      with:
        update: true
        install: flex bison make 
          mingw-w64-x86_64-toolchain mingw-w64-x86_64-cmake mingw-w64-x86_64-binutils 
          mingw-w64-x86_64-gcc mingw-w64-x86_64-headers-git mingw-w64-x86_64-gcc-libs 
          mingw-w64-x86_64-libwinpthread-git mingw-w64-x86_64-winpthreads-git mingw-w64-x86_64-bzip2 
          mingw-w64-x86_64-lapack mingw-w64-x86_64-openblas mingw-w64-x86_64-libxml2
        
    - name: Cache compiled libSBML
      id: cache-libsbml-gcc
      uses: actions/cache@v4
      with:
        path: D:/a/_temp/msys64/tmp/libsbml-5.20.4
        key: ${{ runner.os }}-libSBML-5.20.4-namespace
        
    - name: Compiling libSBML
      if: steps.cache-libsbml-gcc.outputs.cache-hit != 'true'
      run: |
        bash scripts/build_libsbml.sh
    
    - name: Install libSBML
      run: |
        bash scripts/install_libsbml.sh
      
    - name: Build library
      run: |
        rm -fr engine/pub/*
        cd engine/src
        make clean
        make install_lib SBML_COMPAT=1
        make install_lib MAXNODES=128 SBML_COMPAT=1
        make install_lib MAXNODES=256 SBML_COMPAT=1
        make install_lib MAXNODES=512 SBML_COMPAT=1
        make install_lib MAXNODES=1024 SBML_COMPAT=1
        make install_alib SBML_COMPAT=1
        make install_alib MAXNODES=128 SBML_COMPAT=1
        make install_alib MAXNODES=256 SBML_COMPAT=1
        make install_alib MAXNODES=512 SBML_COMPAT=1
        make install_alib MAXNODES=1024 SBML_COMPAT=1
        make clean
        cd ../../../
        tar -zcvf libMaBoSS-sbml-win64.tar.gz MaBoSS/README.md MaBoSS/LICENSE MaBoSS/engine/src MaBoSS/engine/include MaBoSS/engine/lib
        
      
    - uses: actions/upload-artifact@v4
      if: github.event_name != 'release'
      with:
        name: libMaBoSS-sbml-win64
        path: D:\a\MaBoSS/libMaBoSS-sbml-win64.tar.gz
        
    - uses: actions/upload-release-asset@v1
      if: github.event_name == 'release'

      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_name: libMaBoSS-sbml-win64.tar.gz
        asset_path: D:\a\MaBoSS/libMaBoSS-sbml-win64.tar.gz
        asset_content_type: application/gzip
  
        
  maboss_conda:
    name: Build MaBoSS Anaconda package
    strategy:
      fail-fast: false
      matrix:
        repo: [
          { id: 0, name: "defaults"},
          { id: 1, name: "conda-forge"}
        ]
        
    runs-on: windows-2019

    # needs: [maboss_windows]
    
    defaults:
      run:
        shell: pwsh -Command {0}

    steps:
    - uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        auto-update-conda: true
        conda-remove-defaults: "true"
        channels: ${{ matrix.repo.name }}
        python-version: 3.12
        use-mamba: true
        
    - name: Install conda-build
      run: |
        conda install conda-build anaconda-client conda-verify
        
    - name: Install winflexbison from conda-forge if building for defaults
      if: matrix.repo.name == 'defaults'
      run: |        
        conda install -c conda-forge winflexbison
        Get-Content .\conda\maboss\meta.yaml | Where-Object {$_ -notmatch 'winflexbison'} | Set-Content out.yaml
        xcopy out.yaml .\conda\maboss\meta.yaml /y
        
    - name: Build Anaconda package
      if: matrix.repo.name == 'defaults'
      env: 
        CUSTOM_BUILD_NUMBER: ${{ matrix.repo.id }}
        FLEX_ROOT: C:\Miniconda\envs\test\Library\bin\
        BISON_ROOT: C:\Miniconda\envs\test\Library\bin\
      run: |
        conda build -c ${{ matrix.repo.name }} -c vincent-noel conda/maboss
    
    - name: Build Anaconda package
      if: matrix.repo.name == 'conda-forge'
      env: 
        CUSTOM_BUILD_NUMBER: ${{ matrix.repo.id }}
      run: |
        conda build -c ${{ matrix.repo.name }} -c vincent-noel conda/maboss
          
    - name: Upload MaBoSS Ananconda package on vincent-noel
      run: |
        anaconda -t ${{ secrets.ANACONDA_TOKEN }} upload -u vincent-noel C:\Miniconda\envs\test\conda-bld\win-64\*.conda --force;
    
    - name: Upload MaBoSS Ananconda package on colomoto
      if: github.repository == 'sysbio-curie/MaBoSS' && github.event_name == 'release'
      run: |
        anaconda -t ${{ secrets.ANACONDA_TOKEN }} upload -u colomoto C:\Miniconda\envs\test\conda-bld\win-64\*.conda --force;
